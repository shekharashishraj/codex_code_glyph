2025-10-04 15:47:37,604 |     INFO |             __init__:  60 | === Starting PDF Processing Run: 20251004_154737_602 ===
2025-10-04 15:47:37,608 |     INFO |            remap_pdf:  82 | Starting PDF remapping with 2 mappings in overlay mode
2025-10-04 15:47:37,609 |     INFO |        log_input_pdf:  67 | Input PDF saved: /Users/ashishrajshekhar/codex_code_glyph/runs/20251004_154737_602/input.pdf (128664 bytes)
2025-10-04 15:47:37,609 |     INFO |   log_mode_selection:  76 | Processing mode selected: overlay
2025-10-04 15:47:37,609 |     INFO |         log_mappings:  81 | Word mappings to apply: 2 total
2025-10-04 15:47:37,609 |     INFO |         log_mappings:  83 |   'Knowledge' → 'Systemss'
2025-10-04 15:47:37,609 |     INFO |         log_mappings:  83 |   'Representation' → 'Recognition'
2025-10-04 15:47:37,610 |     INFO |         log_mappings:  81 | Word mappings to apply: 2 total
2025-10-04 15:47:37,610 |     INFO |         log_mappings:  83 |   'Knowledge' → 'Systemss'
2025-10-04 15:47:37,610 |     INFO |         log_mappings:  83 |   'Representation' → 'Recognition'
2025-10-04 15:47:37,612 |     INFO | log_pattern_building:  99 | Building regex pattern for 2 words (ignore_case=True)
2025-10-04 15:47:37,612 |    DEBUG | log_pattern_building: 100 | Words to match: ['Knowledge', 'Representation']
2025-10-04 15:47:37,612 |    DEBUG | log_pattern_building: 101 | Compiled pattern: Representation|Knowledge
2025-10-04 15:47:37,616 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Knowledge Representation and Reasoning: Questions'
2025-10-04 15:47:37,616 |     INFO |     process_tj_array:  97 | TJ Array - Applied 2 replacements
2025-10-04 15:47:37,616 |     INFO |     process_tj_array:  99 |   'Knowledge' → 'Systemss' at positions 0-9
2025-10-04 15:47:37,616 |     INFO |     process_tj_array:  99 |   'Representation' → 'Recognition' at positions 10-24
2025-10-04 15:47:37,616 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Multiple Choice Questions'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 1: What is the primary aim of Knowledge Representation and Rea-'
2025-10-04 15:47:37,617 |     INFO |     process_tj_array:  97 | TJ Array - Applied 2 replacements
2025-10-04 15:47:37,617 |     INFO |     process_tj_array:  99 |   'Knowledge' → 'Systemss' at positions 41-50
2025-10-04 15:47:37,617 |     INFO |     process_tj_array:  99 |   'Representation' → 'Recognition' at positions 51-65
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'soning?'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. To enable computers to process vast amounts of data effciently.'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. To develop advanced machine learning algorithms.'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. To understand the nature of intelligence and cognition to simulate human-like abilities in'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'computers.'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. To create complex robotic systems for automation.'
2025-10-04 15:47:37,617 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 2: Which type of reasoning is described as \\jumping to conclusions'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'based on some default assumptions" when information is insuffcient, potentially'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'leading to unsound conclusions that may need to be withdrawn?'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. Deductive reasoning'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. Abductive reasoning'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. Epistemic reasoning'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. Default reasoning'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 3: In propositional logic, what is an \\atom"?'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. A logical connective like'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: " '"
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'and'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: "'"
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' or'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: " '"
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'or'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: "'"
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '.'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. A formula composed of multiple propositions.'
2025-10-04 15:47:37,618 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. The smallest unit to which a truth value (true/false) can be assigned.'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. A symbol representing a numerical value.'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 4: Which of the following connectives is considered a unary proposi-'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'tional connective?'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. Conjunction ('
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '^'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. Implication ('
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '!'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. Disjunction ('
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. Negation ('
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,619 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '1'
2025-10-04 15:47:37,619 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 0: 'Systemss Recognition and Reasoning: Questions Multiple Choice Questions Question - 1: What is the primary aim of Systemss Recognition and Rea-'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 1: 'Multiple Choice Questions Question - 1: What is the primary aim of Systemss Recognition and Rea- soning?'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 2: 'Question - 1: What is the primary aim of Systemss Recognition and Rea- soning?'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 3: 'soning?  a. To enable computers to process vast amounts of data effciently.'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 4: ' a. To enable computers to process vast amounts of data effciently.'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 5: ' a. To enable computers to process vast amounts of data effciently.  b. To develop advanced machine learning algorithms.'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 6: ' b. To develop advanced machine learning algorithms.'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 7: ' b. To develop advanced machine learning algorithms.  c. To understand the nature of intelligence and cognition to simulate human-like abilities in'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 8: ' c. To understand the nature of intelligence and cognition to simulate human-like abilities in computers.'
2025-10-04 15:47:37,620 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 9: ' c. To understand the nature of intelligence and cognition to simulate human-like abilities in computers.'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 10: 'computers.  d. To create complex robotic systems for automation.'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 11: ' d. To create complex robotic systems for automation. Question - 2: Which type of reasoning is described as \\jumping to conclusions'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 12: ' d. To create complex robotic systems for automation. Question - 2: Which type of reasoning is described as \\jumping to conclusions based on some default assumptions" when information is insuffcient, potentially'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 13: 'Question - 2: Which type of reasoning is described as \\jumping to conclusions based on some default assumptions" when information is insuffcient, potentially leading to unsound conclusions that may need to be withdrawn?'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 14: 'based on some default assumptions" when information is insuffcient, potentially leading to unsound conclusions that may need to be withdrawn?'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 15: 'leading to unsound conclusions that may need to be withdrawn?  a. Deductive reasoning'
2025-10-04 15:47:37,621 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 16: ' a. Deductive reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 17: ' a. Deductive reasoning  b. Abductive reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 18: ' b. Abductive reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 19: ' b. Abductive reasoning  c. Epistemic reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 20: ' c. Epistemic reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 21: ' c. Epistemic reasoning  d. Default reasoning'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 22: ' d. Default reasoning Question - 3: In propositional logic, what is an \\atom"?'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 23: ' d. Default reasoning Question - 3: In propositional logic, what is an \\atom"?'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 24: 'Question - 3: In propositional logic, what is an \\atom"?  a. A logical connective like'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 25: " a. A logical connective like  '"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 26: " a. A logical connective like  ' and"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 27: " ' and '"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 28: "and '  or"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 29: "'  or  '"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 30: " or  ' or"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 31: " ' or '"
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 32: "or ' ."
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 33: "' ."
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 34: '.  b. A formula composed of multiple propositions.'
2025-10-04 15:47:37,622 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 35: ' b. A formula composed of multiple propositions.'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 36: ' b. A formula composed of multiple propositions.  c. The smallest unit to which a truth value (true/false) can be assigned.'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 37: ' c. The smallest unit to which a truth value (true/false) can be assigned.'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 38: ' c. The smallest unit to which a truth value (true/false) can be assigned.  d. A symbol representing a numerical value.'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 39: ' d. A symbol representing a numerical value. Question - 4: Which of the following connectives is considered a unary proposi-'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 40: ' d. A symbol representing a numerical value. Question - 4: Which of the following connectives is considered a unary proposi- tional connective?'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 41: 'Question - 4: Which of the following connectives is considered a unary proposi- tional connective?'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 42: 'tional connective?  a. Conjunction ('
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 43: ' a. Conjunction ( ^'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 44: ' a. Conjunction ( ^ )'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 45: '^ )'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 46: ')  b. Implication ('
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 47: ' b. Implication ( !'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 48: ' b. Implication ( ! )'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 49: '! )'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 50: ')  c. Disjunction ('
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 51: ' c. Disjunction ( p'
2025-10-04 15:47:37,623 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 52: ' c. Disjunction ( p )'
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 53: 'p )'
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 54: ')  d. Negation ('
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 55: ' d. Negation ( :'
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 56: ' d. Negation ( : )'
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 57: ': ) 1'
2025-10-04 15:47:37,624 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 58: ') 1'
2025-10-04 15:47:37,624 |     INFO | _apply_content_stream_mapping: 348 | Page 1 updated via content stream rewrite
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 5: A propositional formula'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' is a tautology if:'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. At least one interpretation satisfies'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' .'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b.'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' can be reduced to a Conjunctive Normal Form (CNF).'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. Every interpretation satisfies'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' .'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. Its negation ('
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'F) is satisfiable.'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 6: What does it mean for a propositional formula'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' to be satisfiable?'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a.'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,627 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' is true for all possible interpretations.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. There exists at least one interpretation that satisfies'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' .'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' contains no logical connectives.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' can be reduced to an empty clause.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 7: Which of the following is equivalent to saying that F entails G'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ffi'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' G'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '?'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' G is a tautology.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' $'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' G is satisfiable.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. (F'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^ :'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'G) is unsatisfiable.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d.'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' :'
2025-10-04 15:47:37,628 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'F'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' G is a contradiction.'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 8: What is the total number of subformulas that can be formed for'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'the propositional formula'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'r'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ! :'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. 8'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. 10'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. 7'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. 9'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 9: What is a key characteristic of a Herbrand interpretation for a'
2025-10-04 15:47:37,629 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'given signature'
2025-10-04 15:47:37,630 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,630 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' (containing at least one object constant)?'
2025-10-04 15:47:37,630 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. Its universe is any non-empty set of individuals.'
2025-10-04 15:47:37,630 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. Its universe is the set of all ground (variable-free) terms of'
2025-10-04 15:47:37,630 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,631 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ', and every ground term is'
2025-10-04 15:47:37,631 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'interpreted as itself.'
2025-10-04 15:47:37,631 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. It always makes all quantified formulas true.'
2025-10-04 15:47:37,631 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. It must contain at least one function constant of arity greater than 0.'
2025-10-04 15:47:37,631 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '2'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 0: 'Question - 5: A propositional formula  F  is a tautology if:'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 1: ' F  is a tautology if:'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 2: ' is a tautology if:  a. At least one interpretation satisfies'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 3: ' a. At least one interpretation satisfies  F'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 4: ' a. At least one interpretation satisfies  F  .'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 5: ' F  .'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 6: ' .  b.'
2025-10-04 15:47:37,631 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 7: ' b.  F'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 8: ' b.  F  can be reduced to a Conjunctive Normal Form (CNF).'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 9: ' F  can be reduced to a Conjunctive Normal Form (CNF).'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 10: ' can be reduced to a Conjunctive Normal Form (CNF).  c. Every interpretation satisfies'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 11: ' c. Every interpretation satisfies  F'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 12: ' c. Every interpretation satisfies  F  .'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 13: ' F  .'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 14: ' .  d. Its negation ('
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 15: ' d. Its negation ( :'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 16: ' d. Its negation ( : F) is satisfiable.'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 17: ': F) is satisfiable. Question - 6: What does it mean for a propositional formula'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 18: 'F) is satisfiable. Question - 6: What does it mean for a propositional formula  F'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 19: 'Question - 6: What does it mean for a propositional formula  F  to be satisfiable?'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 20: ' F  to be satisfiable?'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 21: ' to be satisfiable?  a.'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 22: ' a.  F'
2025-10-04 15:47:37,632 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 23: ' a.  F  is true for all possible interpretations.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 24: ' F  is true for all possible interpretations.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 25: ' is true for all possible interpretations.  b. There exists at least one interpretation that satisfies'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 26: ' b. There exists at least one interpretation that satisfies  F'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 27: ' b. There exists at least one interpretation that satisfies  F  .'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 28: ' F  .'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 29: ' .  c.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 30: ' c.  F'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 31: ' c.  F  contains no logical connectives.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 32: ' F  contains no logical connectives.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 33: ' contains no logical connectives.  d.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 34: ' d.  F'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 35: ' d.  F  can be reduced to an empty clause.'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 36: ' F  can be reduced to an empty clause. Question - 7: Which of the following is equivalent to saying that F entails G'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 37: ' can be reduced to an empty clause. Question - 7: Which of the following is equivalent to saying that F entails G ('
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 38: 'Question - 7: Which of the following is equivalent to saying that F entails G ( F'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 39: '( F  ffi'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 40: 'F  ffi  G'
2025-10-04 15:47:37,633 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 41: ' ffi  G )'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 42: ' G ) ?'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 43: ') ?'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 44: '?  a. F'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 45: ' a. F  ^'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 46: ' a. F  ^  G is a tautology.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 47: ' ^  G is a tautology.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 48: ' G is a tautology.  b. F'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 49: ' b. F  $'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 50: ' b. F  $  G is satisfiable.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 51: ' $  G is satisfiable.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 52: ' G is satisfiable.  c. (F'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 53: ' c. (F  ^ :'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 54: ' c. (F  ^ : G) is unsatisfiable.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 55: ' ^ : G) is unsatisfiable.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 56: 'G) is unsatisfiable.  d.'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 57: ' d.  :'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 58: ' d.  : F'
2025-10-04 15:47:37,634 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 59: ' : F  _'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 60: 'F  _  G is a contradiction.'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 61: ' _  G is a contradiction. Question - 8: What is the total number of subformulas that can be formed for'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 62: ' G is a contradiction. Question - 8: What is the total number of subformulas that can be formed for the propositional formula'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 63: 'Question - 8: What is the total number of subformulas that can be formed for the propositional formula :'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 64: 'the propositional formula : ('
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 65: ': ( p'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 66: '( p  ^'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 67: 'p  ^  q'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 68: ' ^  q )'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 69: ' q )  _'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 70: ')  _  ('
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 71: ' _  ( r'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 72: ' ( r  ! :'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 73: 'r  ! : p'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 74: ' ! : p )'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 75: 'p )'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 76: ')  a. 8'
2025-10-04 15:47:37,635 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 77: ' a. 8'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 78: ' a. 8  b. 10'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 79: ' b. 10'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 80: ' b. 10  c. 7'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 81: ' c. 7'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 82: ' c. 7  d. 9'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 83: ' d. 9 Question - 9: What is a key characteristic of a Herbrand interpretation for a'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 84: ' d. 9 Question - 9: What is a key characteristic of a Herbrand interpretation for a given signature'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 85: 'Question - 9: What is a key characteristic of a Herbrand interpretation for a given signature  '
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 86: 'given signature    (containing at least one object constant)?'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 87: '   (containing at least one object constant)?'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 88: ' (containing at least one object constant)?  a. Its universe is any non-empty set of individuals.'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 89: ' a. Its universe is any non-empty set of individuals.'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 90: ' a. Its universe is any non-empty set of individuals.  b. Its universe is the set of all ground (variable-free) terms of'
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 91: ' b. Its universe is the set of all ground (variable-free) terms of  '
2025-10-04 15:47:37,636 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 92: ' b. Its universe is the set of all ground (variable-free) terms of   , and every ground term is'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 93: '  , and every ground term is interpreted as itself.'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 94: ', and every ground term is interpreted as itself.'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 95: 'interpreted as itself.  c. It always makes all quantified formulas true.'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 96: ' c. It always makes all quantified formulas true.'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 97: ' c. It always makes all quantified formulas true.  d. It must contain at least one function constant of arity greater than 0.'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 98: ' d. It must contain at least one function constant of arity greater than 0. 2'
2025-10-04 15:47:37,637 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 99: ' d. It must contain at least one function constant of arity greater than 0. 2'
2025-10-04 15:47:37,640 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 10: Which of the following statements about SAT solvers is correct?'
2025-10-04 15:47:37,640 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. SAT solvers only accept formulas in Disjunctive Normal Form (DNF).'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. SAT solvers decide satisfiability of propositional formulas, often using DPLL.'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. SAT solvers can only handle problems with at most 100 variables.'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. SAT solvers are ineffcient and rarely used in practice.'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 11: Every atom,'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' >'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ?'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ', and any recursive combination of formulas with'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'connectives are considered valid formulas in propositional logic.'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. True'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. False'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 12: Which of the following statements is a tautology?'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. ('
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,641 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^ :'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'q'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. ('
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. ('
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'q'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '))'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d.'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' :'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' p'
2025-10-04 15:47:37,642 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 13: Which of the following is a key limitation of propositional logic'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'that First-Order Logic overcomes?'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. Inability to represent negation'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. Inability to express relations between individuals and relations'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. Inability to use logical connectives such as'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' and'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' X'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. Inability to reason with truth values'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 14: Which of the following is a valid term in FOL?'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a.'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' 8'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x P(x)'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. P(x)'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' Q(y)'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. father(john)'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 15: What is the Herbrand Universe of a signature'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '?'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. The set of all formulas in'
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,643 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '.'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. The set of all predicates in'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '.'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. The set of all ground terms of'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '.'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. The set of all interpretations over'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' '
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '.'
2025-10-04 15:47:37,644 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '3'
2025-10-04 15:47:37,644 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 0: 'Question - 10: Which of the following statements about SAT solvers is correct?  a. SAT solvers only accept formulas in Disjunctive Normal Form (DNF).'
2025-10-04 15:47:37,644 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '10:' → '1.0:'
2025-10-04 15:47:37,644 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 1: ' a. SAT solvers only accept formulas in Disjunctive Normal Form (DNF).'
2025-10-04 15:47:37,644 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 2: ' a. SAT solvers only accept formulas in Disjunctive Normal Form (DNF).  b. SAT solvers decide satisfiability of propositional formulas, often using DPLL.'
2025-10-04 15:47:37,644 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 3: ' b. SAT solvers decide satisfiability of propositional formulas, often using DPLL.'
2025-10-04 15:47:37,644 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 4: ' b. SAT solvers decide satisfiability of propositional formulas, often using DPLL.  c. SAT solvers can only handle problems with at most 100 variables.'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 5: ' c. SAT solvers can only handle problems with at most 100 variables.'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 6: ' c. SAT solvers can only handle problems with at most 100 variables.  d. SAT solvers are ineffcient and rarely used in practice.'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 7: ' d. SAT solvers are ineffcient and rarely used in practice. Question - 11: Every atom,'
2025-10-04 15:47:37,645 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '11:' → '1.1:'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 8: ' d. SAT solvers are ineffcient and rarely used in practice. Question - 11: Every atom,  >'
2025-10-04 15:47:37,645 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '11:' → '1.1:'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 9: 'Question - 11: Every atom,  > ;'
2025-10-04 15:47:37,645 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '11:' → '1.1:'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 10: ' > ;  ?'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 11: ';  ? , and any recursive combination of formulas with'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 12: ' ? , and any recursive combination of formulas with connectives are considered valid formulas in propositional logic.'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 13: ', and any recursive combination of formulas with connectives are considered valid formulas in propositional logic.'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 14: 'connectives are considered valid formulas in propositional logic.  a. True'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 15: ' a. True'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 16: ' a. True  b. False'
2025-10-04 15:47:37,645 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 17: ' b. False Question - 12: Which of the following statements is a tautology?'
2025-10-04 15:47:37,646 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '12:' → '1.2:'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 18: ' b. False Question - 12: Which of the following statements is a tautology?'
2025-10-04 15:47:37,646 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '12:' → '1.2:'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 19: 'Question - 12: Which of the following statements is a tautology?  a. ('
2025-10-04 15:47:37,646 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '12:' → '1.2:'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 20: ' a. ( p'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 21: ' a. ( p  !'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 22: 'p  !  q'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 23: ' !  q )'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 24: ' q )  ^'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 25: ')  ^  ('
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 26: ' ^  ( p'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 27: ' ( p  ^ :'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 28: 'p  ^ : q'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 29: ' ^ : q )'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 30: 'q )'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 31: ')  b. ('
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 32: ' b. ( p'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 33: ' b. ( p  !'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 34: 'p  !  q'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 35: ' !  q )'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 36: ' q )  !'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 37: ')  !  ('
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 38: ' !  ( :'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 39: ' ( : p'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 40: ': p  _'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 41: 'p  _  q'
2025-10-04 15:47:37,646 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 42: ' _  q )'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 43: ' q )'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 44: ')  c. ('
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 45: ' c. ( p'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 46: ' c. ( p  !'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 47: 'p  !  ('
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 48: ' !  ( q'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 49: ' ( q  !'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 50: 'q  !  p'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 51: ' !  p ))'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 52: ' p ))'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 53: '))  d.'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 54: ' d.  :'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 55: ' d.  : p'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 56: ' : p  _'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 57: 'p  _  p'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 58: ' _  p Question - 13: Which of the following is a key limitation of propositional logic'
2025-10-04 15:47:37,647 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '13:' → '1.3:'
2025-10-04 15:47:37,647 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 59: ' p Question - 13: Which of the following is a key limitation of propositional logic that First-Order Logic overcomes?'
2025-10-04 15:47:37,647 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '13:' → '1.3:'
2025-10-04 15:47:37,648 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 60: 'Question - 13: Which of the following is a key limitation of propositional logic that First-Order Logic overcomes?'
2025-10-04 15:47:37,648 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '13:' → '1.3:'
2025-10-04 15:47:37,648 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 61: 'that First-Order Logic overcomes?  a. Inability to represent negation'
2025-10-04 15:47:37,648 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 62: ' a. Inability to represent negation'
2025-10-04 15:47:37,649 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 63: ' a. Inability to represent negation  b. Inability to express relations between individuals and relations'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 64: ' b. Inability to express relations between individuals and relations'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 65: ' b. Inability to express relations between individuals and relations  c. Inability to use logical connectives such as'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 66: ' c. Inability to use logical connectives such as  ^'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 67: ' c. Inability to use logical connectives such as  ^  and'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 68: ' ^  and  X'
2025-10-04 15:47:37,650 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 69: ' and  X'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 70: ' X  d. Inability to reason with truth values'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 71: ' d. Inability to reason with truth values Question - 14: Which of the following is a valid term in FOL?'
2025-10-04 15:47:37,651 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '14:' → '1.4:'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 72: ' d. Inability to reason with truth values Question - 14: Which of the following is a valid term in FOL?'
2025-10-04 15:47:37,651 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '14:' → '1.4:'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 73: 'Question - 14: Which of the following is a valid term in FOL?  a.'
2025-10-04 15:47:37,651 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '14:' → '1.4:'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 74: ' a.  8'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 75: ' a.  8 x P(x)'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 76: ' 8 x P(x)'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 77: 'x P(x)  b. P(x)'
2025-10-04 15:47:37,651 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 78: ' b. P(x)  ^'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 79: ' b. P(x)  ^  Q(y)'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 80: ' ^  Q(y)'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 81: ' Q(y)  c. father(john)'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 82: ' c. father(john) Question - 15: What is the Herbrand Universe of a signature'
2025-10-04 15:47:37,652 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '15:' → '1.5:'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 83: ' c. father(john) Question - 15: What is the Herbrand Universe of a signature  '
2025-10-04 15:47:37,652 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '15:' → '1.5:'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 84: 'Question - 15: What is the Herbrand Universe of a signature   ?'
2025-10-04 15:47:37,652 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '15:' → '1.5:'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 85: '  ?'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 86: '?  a. The set of all formulas in'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 87: ' a. The set of all formulas in  '
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 88: ' a. The set of all formulas in   .'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 89: '  .'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 90: '.  b. The set of all predicates in'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 91: ' b. The set of all predicates in  '
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 92: ' b. The set of all predicates in   .'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 93: '  .'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 94: '.  c. The set of all ground terms of'
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 95: ' c. The set of all ground terms of  '
2025-10-04 15:47:37,652 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 96: ' c. The set of all ground terms of   .'
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 97: '  .'
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 98: '.  d. The set of all interpretations over'
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 99: ' d. The set of all interpretations over  '
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 100: ' d. The set of all interpretations over   .'
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 101: '  . 3'
2025-10-04 15:47:37,653 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 102: '. 3'
2025-10-04 15:47:37,656 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 16: Which of the following is an example of a terminological axiom'
2025-10-04 15:47:37,656 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'in FOL?'
2025-10-04 15:47:37,656 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a.'
2025-10-04 15:47:37,656 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' 8'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x (Teenager(x)'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ! :'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Adult(x))'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. Child(John)'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. Aflects(JRA'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' Mary)'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d.'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' :'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Aflects(JRA'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,657 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' Mary)'
2025-10-04 15:47:37,658 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Question - 17: What are some of the free occurrences of a variable in the formula'
2025-10-04 15:47:37,658 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'below?'
2025-10-04 15:47:37,658 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '8'
2025-10-04 15:47:37,658 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'P'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' Q'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' y'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '))'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^ 9'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'y R'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'y'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' z'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '1234567'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' a. 4, 7'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' b. 2, 3'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' c. 1'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' 6'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,659 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' 7'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' d. None of the above'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'Long Answer Questions'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '1. Construct the parse tree for the following propositional logic formula:'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '((('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'r'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' s'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '))'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' (('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 't'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^ :'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'u'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' v'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '))'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '2. Draw a parse tree of the following formula and specify bound and free vari-'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'ables.'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '8'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'P'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,660 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' Q'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')))'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' !'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '9'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'y R'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '('
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'x'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' y'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '))'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '3. Starting with an empty set'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' U'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' of literals, apply unit propagation to the formula'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'below. Show how'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' F'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' and'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' U'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' (the set of unit clauses) change in each iteration and'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'say what is the interpretation of p'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ';'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q and r.'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'r'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'q'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _ :'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'r'
2025-10-04 15:47:37,661 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' q'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _ :'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'r'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ^'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' ('
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ':'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: 'p'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' _'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ' r'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: ')'
2025-10-04 15:47:37,662 |    DEBUG |     process_tj_array:  90 | TJ Array - Combined text: '4'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 0: 'Question - 16: Which of the following is an example of a terminological axiom in FOL?'
2025-10-04 15:47:37,662 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '16:' → '1.6:'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 1: 'in FOL?  a.'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 2: ' a.  8'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 3: ' a.  8 x (Teenager(x)'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 4: ' 8 x (Teenager(x)  ! :'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 5: 'x (Teenager(x)  ! : Adult(x))'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 6: ' ! : Adult(x))'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 7: 'Adult(x))  b. Child(John)'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 8: ' b. Child(John)'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 9: ' b. Child(John)  c. Aflects(JRA'
2025-10-04 15:47:37,662 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 10: ' c. Aflects(JRA ;'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 11: ' c. Aflects(JRA ;  Mary)'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 12: ';  Mary)'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 13: ' Mary)  d.'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 14: ' d.  :'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 15: ' d.  : Aflects(JRA'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 16: ' : Aflects(JRA ;'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 17: 'Aflects(JRA ;  Mary)'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 18: ';  Mary) Question - 17: What are some of the free occurrences of a variable in the formula'
2025-10-04 15:47:37,663 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '17:' → '1.7:'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 19: ' Mary) Question - 17: What are some of the free occurrences of a variable in the formula below?'
2025-10-04 15:47:37,663 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '17:' → '1.7:'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 20: 'Question - 17: What are some of the free occurrences of a variable in the formula below? 8'
2025-10-04 15:47:37,663 |    DEBUG | _find_split_decimal_patterns: 195 | Found split decimal: '17:' → '1.7:'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 21: 'below? 8 x'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 22: '8 x  ('
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 23: 'x  ( P'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 24: ' ( P ('
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 25: 'P ( x'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 26: '( x )'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 27: 'x )  !'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 28: ')  !  Q'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 29: ' !  Q ('
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 30: ' Q ( x'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 31: '( x ;'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 32: 'x ;  y'
2025-10-04 15:47:37,663 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 33: ';  y ))'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 34: ' y ))  ^ 9'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 35: '))  ^ 9 y R'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 36: ' ^ 9 y R ('
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 37: 'y R ( y'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 38: '( y ;'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 39: 'y ;  z'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 40: ';  z )'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 41: ' z ) 1234567'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 42: ') 1234567'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 43: '1234567  a. 4, 7'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 44: ' a. 4, 7'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 45: ' a. 4, 7  b. 2, 3'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 46: ' b. 2, 3'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 47: ' b. 2, 3  c. 1'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 48: ' c. 1 ;'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 49: ' c. 1 ;  6'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 50: ';  6 ;'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 51: ' 6 ;  7'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 52: ';  7'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 53: ' 7  d. None of the above'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 54: ' d. None of the above Long Answer Questions'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 55: ' d. None of the above Long Answer Questions 1. Construct the parse tree for the following propositional logic formula:'
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 56: 'Long Answer Questions 1. Construct the parse tree for the following propositional logic formula: ((('
2025-10-04 15:47:37,664 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 57: '1. Construct the parse tree for the following propositional logic formula: ((( :'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 58: '((( : p'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 59: ': p  _'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 60: 'p  _  q'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 61: ' _  q )'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 62: ' q )  ^'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 63: ')  ^  ('
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 64: ' ^  ( r'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 65: ' ( r  !'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 66: 'r  !  s'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 67: ' !  s ))'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 68: ' s ))  !'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 69: '))  !  (('
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 70: ' !  (( t'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 71: ' (( t  ^ :'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 72: 't  ^ : u'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 73: ' ^ : u )'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 74: 'u )  _'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 75: ')  _  v'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 76: ' _  v ))'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 77: ' v )) 2. Draw a parse tree of the following formula and specify bound and free vari-'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 78: ')) 2. Draw a parse tree of the following formula and specify bound and free vari- ables.'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 79: '2. Draw a parse tree of the following formula and specify bound and free vari- ables. ('
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 80: 'ables. ( 8'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 81: '( 8 x'
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 82: '8 x  ('
2025-10-04 15:47:37,665 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 83: 'x  ( P'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 84: ' ( P ('
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 85: 'P ( x'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 86: '( x )'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 87: 'x )  _'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 88: ')  _  Q'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 89: ' _  Q ('
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 90: ' Q ( x'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 91: '( x )))'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 92: 'x )))  !'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 93: ')))  !  ('
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 94: ' !  ( 9'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 95: ' ( 9 y R'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 96: '9 y R ('
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 97: 'y R ( x'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 98: '( x ;'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 99: 'x ;  y'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 100: ';  y ))'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 101: ' y )) 3. Starting with an empty set'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 102: ')) 3. Starting with an empty set  U'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 103: '3. Starting with an empty set  U  of literals, apply unit propagation to the formula'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 104: ' U  of literals, apply unit propagation to the formula below. Show how'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 105: ' of literals, apply unit propagation to the formula below. Show how  F'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 106: 'below. Show how  F  and'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 107: ' F  and  U'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 108: ' and  U  (the set of unit clauses) change in each iteration and'
2025-10-04 15:47:37,666 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 109: ' U  (the set of unit clauses) change in each iteration and say what is the interpretation of p'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 110: ' (the set of unit clauses) change in each iteration and say what is the interpretation of p ;'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 111: 'say what is the interpretation of p ;  q and r.'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 112: ';  q and r. r'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 113: ' q and r. r  ^'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 114: 'r  ^  ('
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 115: ' ^  ( :'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 116: ' ( : q'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 117: ': q  _ :'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 118: 'q  _ : r'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 119: ' _ : r )'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 120: 'r )  ^'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 121: ')  ^  ('
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 122: ' ^  ( p'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 123: ' ( p  _'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 124: 'p  _  q'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 125: ' _  q  _ :'
2025-10-04 15:47:37,667 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 126: ' q  _ : r'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 127: ' _ : r )'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 128: 'r )  ^'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 129: ')  ^  ('
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 130: ' ^  ( :'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 131: ' ( : p'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 132: ': p  _'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 133: 'p  _  r'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 134: ' _  r )'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 135: ' r ) 4'
2025-10-04 15:47:37,668 |    DEBUG | _find_cross_array_matches: 137 | Cross-array window 136: ') 4'
2025-10-04 15:47:37,690 |     INFO | _apply_content_stream_mapping: 358 | Successfully applied content stream replacements without overlays
2025-10-04 15:47:37,691 |     INFO |       log_output_pdf: 190 | Output PDF saved: /Users/ashishrajshekhar/codex_code_glyph/runs/20251004_154737_602/output.pdf (139535 bytes)
2025-10-04 15:47:37,692 |     INFO |         finalize_run: 222 | === Run Complete: 20251004_154737_602 (Duration: 0.09s) ===
2025-10-04 15:47:37,692 |     INFO |         finalize_run: 223 | Run directory: /Users/ashishrajshekhar/codex_code_glyph/runs/20251004_154737_602
2025-10-04 15:47:37,692 |     INFO |         finalize_run: 224 | Metadata saved: /Users/ashishrajshekhar/codex_code_glyph/runs/20251004_154737_602/run_metadata.json
2025-10-04 15:47:37,692 |     INFO |         finalize_run: 233 | Run completed successfully with 2 mappings applied
